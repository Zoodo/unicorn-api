# Generated by Django 3.1.2 on 2020-10-17 11:47

import uuid

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import guardian.mixins
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [("accounts", "0001_initial"), ("accounts", "0002_auto_20201017_1147")]

    initial = True

    dependencies = [("auth", "0012_alter_user_first_name_max_length")]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("crew", "Crew"),
                            ("participant", "Participant"),
                            ("jury", "Jury"),
                            ("anon", "Anonymous"),
                            ("mortal", "Other"),
                        ],
                        default="mortal",
                        max_length=16,
                        verbose_name="Role",
                    ),
                ),
                (
                    "username_overridden",
                    models.BooleanField(
                        default=False,
                        help_text="User has manually set a custom username. This will stop automatic updates from social providers.",
                    ),
                ),
                (
                    "display_name_format",
                    models.CharField(
                        choices=[
                            ("fl", "%(first)s %(last)s"),
                            ("lf", "%(last)s, %(first)s"),
                            ("fla", "%(first)s %(last)s aka. %(nick)s"),
                            ("lfa", "%(last)s, %(first)s aka. %(nick)s"),
                            ("fa", "%(first)s aka. %(nick)s"),
                            ("f", "%(first)s"),
                            ("a", "%(nick)s"),
                        ],
                        default="fa",
                        max_length=3,
                        verbose_name="Display Name format",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Must be in valid E.164 format (international with + prefix). Up to 15 digits allowed.",
                        max_length=16,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone Number must be entered in valid E.164 format (international with + prefix). Up to 15 digits allowed.",
                                regex="^\\+[1-9]\\d{1,14}$",
                            )
                        ],
                        verbose_name="Phone Number",
                    ),
                ),
                (
                    "zip",
                    models.CharField(
                        blank=True, max_length=16, null=True, verbose_name="Zip Code"
                    ),
                ),
                (
                    "birth",
                    models.DateField(
                        blank=True,
                        default=None,
                        help_text="ISO 8601 date format.",
                        null=True,
                        verbose_name="Birth Date",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("other", "Other/ Prefer not say"),
                            ("male", "Male"),
                            ("female", "Female"),
                        ],
                        default=None,
                        max_length=6,
                        null=True,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "approved_for_pii",
                    models.BooleanField(
                        default=False,
                        help_text="User is approved for interacting with PII data on other accounts.",
                        verbose_name="Approved for PII",
                    ),
                ),
                (
                    "accepted_location",
                    models.BooleanField(
                        default=False, verbose_name="Has accepted location tracking"
                    ),
                ),
                (
                    "row",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="row",
                    ),
                ),
                (
                    "seat",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="seat",
                    ),
                ),
                (
                    "checked_in",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user has been physically checked in to the event or not.",
                        verbose_name="checked in",
                    ),
                ),
                (
                    "crew",
                    models.JSONField(
                        blank=True, null=True, verbose_name="crew details"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={"ordering": ("last_name", "first_name")},
            bases=(models.Model, guardian.mixins.GuardianUserMixin),
            managers=[("objects", django.contrib.auth.models.UserManager())],
        ),
        migrations.CreateModel(
            name="UserCard",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=16, unique=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usercards",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"ordering": ("user", "value")},
        ),
        migrations.CreateModel(
            name="AutoCrew",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("crew", models.CharField(db_index=True, max_length=128)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="autocrews",
                        to="auth.group",
                    ),
                ),
            ],
            options={"ordering": ("crew",)},
        ),
    ]
